import type { ForumTopicPayload, MentionsPayload } from "@guildedjs/guilded-api-typings";
import { Base } from "./Base";
import type { Client } from "./Client";
export declare class ForumTopic extends Base<ForumTopicPayload, number> {
    readonly serverId: string;
    readonly channelId: string;
    title: string;
    readonly _createdAt: number;
    readonly createdBy: string;
    readonly createdByWebhookId: string | null;
    _updatedAt: number | null;
    _bumpedAt: number | null;
    _deletedAt: number | null;
    isPinned: boolean;
    isLocked: boolean;
    content: string;
    mentions: MentionsPayload;
    constructor(client: Client, data: ForumTopicPayload);
    get createdAt(): Date;
    get deletedAt(): Date | null;
    get updatedAt(): Date | null;
    get bumpedAt(): Date | null;
    _update(data: Partial<ForumTopicPayload & {
        _deletedAt?: Date;
    }>): void;
}
//# sourceMappingURL=Forum.d.ts.map