import { Collection } from "@discordjs/collection";
import type { Message } from "guilded.js";
import type { Command } from "../structures/Command";
import { Inhibitor } from "../structures/Inhibitor";
export declare class CooldownInhibitor extends Inhibitor {
    name: string;
    /** The collection of users that are in cooldown */
    membersInCooldown: Collection<string, Cooldown>;
    execute(message: Message, command: Command): Promise<boolean>;
    init(): void;
}
export interface Cooldown {
    /** The amount of times a command was used. */
    used: number;
    /** The timestamp when this command should be available to use again. */
    timestamp: number;
}
export default CooldownInhibitor;
//# sourceMappingURL=cooldown.d.ts.map