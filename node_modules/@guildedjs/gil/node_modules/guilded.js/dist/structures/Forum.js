"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForumTopic = void 0;
const Base_1 = require("./Base");
class ForumTopic extends Base_1.Base {
    constructor(client, data) {
        var _a;
        super(client, data);
        this.serverId = data.serverId;
        this.channelId = data.channelId;
        this._createdAt = Date.parse(data.createdAt);
        this.createdByWebhookId = (_a = data.createdByWebhookId) !== null && _a !== void 0 ? _a : null;
        this.createdBy = data.createdBy;
        this.isPinned = false;
        this.isLocked = false;
        this._deletedAt = null;
        this._update(data);
    }
    get createdAt() {
        return new Date(this._createdAt);
    }
    get deletedAt() {
        return this._deletedAt ? new Date(this._deletedAt) : null;
    }
    get updatedAt() {
        return this._updatedAt ? new Date(this._updatedAt) : null;
    }
    get bumpedAt() {
        return this._bumpedAt ? new Date(this._bumpedAt) : null;
    }
    _update(data) {
        if ("updatedAt" in data && typeof data.updatedAt !== "undefined") {
            this._updatedAt = data.updatedAt ? Date.parse(data.updatedAt) : null;
        }
        if ("_deletedAt" in data && typeof data._deletedAt !== "undefined") {
            this._deletedAt = data._deletedAt.getTime();
        }
        if ("bumpedAt" in data && typeof data.bumpedAt !== "undefined") {
            this._bumpedAt = data.bumpedAt ? Date.parse(data.bumpedAt) : null;
        }
        if ("isPinned" in data && typeof data.isPinned !== "undefined") {
            this.isPinned = data.isPinned;
        }
        if ("isLocked" in data && typeof data.isLocked !== "undefined") {
            this.isLocked = data.isLocked;
        }
        if ("title" in data && typeof data.title !== "undefined") {
            this.title = data.title;
        }
        if ("content" in data && typeof data.content !== "undefined") {
            this.content = data.content;
        }
        if ("mentions" in data && typeof data.mentions !== "undefined") {
            this.mentions = data.mentions;
        }
    }
}
exports.ForumTopic = ForumTopic;
//# sourceMappingURL=Forum.js.map