export declare enum WSOpCodes {
    SUCCESS = 0,
    WELCOME = 1,
    RESUME = 2,
    ERROR = 8,
    PING = 9,
    PONG = 10
}
export declare const WebSocketEvents: {
    readonly CalendarEventCreated: "CalendarEventCreated";
    readonly CalendarEventUpdated: "CalendarEventUpdated";
    readonly CalendarEventDeleted: "CalendarEventDeleted";
    readonly CalendarEventRsvpUpdated: "CalendarEventRsvpUpdated";
    readonly CalendarEventRsvpManyUpdated: "CalendarEventRsvpManyUpdated";
    readonly CalendarEventRsvpDeleted: "CalendarEventRsvpDeleted";
    readonly ChatMessageCreated: "ChatMessageCreated";
    readonly ChatMessageUpdated: "ChatMessageUpdated";
    readonly ChatMessageDeleted: "ChatMessageDeleted";
    readonly TeamMemberJoined: "TeamMemberJoined";
    readonly TeamMemberRemoved: "TeamMemberRemoved";
    readonly TeamMemberUpdated: "TeamMemberUpdated";
    readonly TeamMemberBanned: "TeamMemberBanned";
    readonly TeamMemberUnbanned: "TeamMemberUnbanned";
    readonly teamRolesUpdated: "teamRolesUpdated";
    readonly TeamWebhookCreated: "TeamWebhookCreated";
    readonly TeamWebhookUpdated: "TeamWebhookUpdated";
    readonly ListItemCompleted: "ListItemCompleted";
    readonly ListItemUncompleted: "ListItemUncompleted";
    readonly ListItemCreated: "ListItemCreated";
    readonly ListItemUpdated: "ListItemUpdated";
    readonly ListItemDeleted: "ListItemDeleted";
    readonly TeamChannelCreated: "TeamChannelCreated";
    readonly TeamChannelUpdated: "TeamChannelUpdated";
    readonly TeamChannelDeleted: "TeamChannelDeleted";
    readonly DocCreated: "DocCreated";
    readonly DocUpdated: "DocUpdated";
    readonly DocDeleted: "DocDeleted";
    readonly ChannelMessageReactionCreated: "ChannelMessageReactionCreated";
    readonly ChannelMessageReactionDeleted: "ChannelMessageReactionDeleted";
    readonly ForumTopicCreated: "ForumTopicCreated";
    readonly ForumTopicUpdated: "ForumTopicUpdated";
    readonly ForumTopicDeleted: "ForumTopicDeleted";
    readonly ForumTopicPinned: "ForumTopicPinned";
    readonly ForumTopicUnpinned: "ForumTopicUnpinned";
};
export declare type WSEvent = typeof WebSocketEvents;
export interface SkeletonWSPayload {
    d: unknown;
    s?: string;
    op: WSOpCodes;
    t: keyof WSEvent;
}
export interface WSWelcomePayload extends SkeletonWSPayload {
    d: {
        heartbeatIntervalMs: number;
        user: {
            id: string;
            botId: string;
            name: string;
            createdAt: string;
            createdBy: string;
        };
        lastMessageId: string;
    };
}
//# sourceMappingURL=Events.d.ts.map